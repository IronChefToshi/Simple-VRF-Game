{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ClaimChain\\\\Simple-VRF-Game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\ClaimChain\\\\Simple-VRF-Game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\ClaimChain\\\\Simple-VRF-Game\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport Loading from './Loading';\nimport Navbar from './Navbar';\nimport Main from './Main';\nimport Web3 from 'web3';\nimport './App.css';\n\nclass App extends Component {\n  componentWillMount() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.loadWeb3();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n  /** !UPDATE **/\n\n\n  loadWeb3() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var accounts, network, balance, web3, maxBet, minBet, contract, contract_abi, contract_address;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(typeof window.ethereum !== 'undefined' && !_this2.state.wrongNetwork)) {\n                _context4.next = 24;\n                break;\n              }\n\n              //don't refresh DApp when user change the network\n              window.ethereum.autoRefreshOnNetworkChange = false;\n              web3 = new Web3(window.ethereum);\n\n              _this2.setState({\n                web3: web3\n              });\n\n              contract_abi = [{\n                \"anonymous\": false,\n                \"inputs\": [{\n                  \"indexed\": true,\n                  \"internalType\": \"address\",\n                  \"name\": \"sender\",\n                  \"type\": \"address\"\n                }, {\n                  \"indexed\": false,\n                  \"internalType\": \"uint256\",\n                  \"name\": \"amount\",\n                  \"type\": \"uint256\"\n                }],\n                \"name\": \"Received\",\n                \"type\": \"event\"\n              }, {\n                \"anonymous\": false,\n                \"inputs\": [{\n                  \"indexed\": false,\n                  \"internalType\": \"uint256\",\n                  \"name\": \"id\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"indexed\": false,\n                  \"internalType\": \"uint256\",\n                  \"name\": \"bet\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"indexed\": false,\n                  \"internalType\": \"uint256\",\n                  \"name\": \"randomSeed\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"indexed\": false,\n                  \"internalType\": \"uint256\",\n                  \"name\": \"amount\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"indexed\": false,\n                  \"internalType\": \"address\",\n                  \"name\": \"player\",\n                  \"type\": \"address\"\n                }, {\n                  \"indexed\": false,\n                  \"internalType\": \"uint256\",\n                  \"name\": \"winAmount\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"indexed\": false,\n                  \"internalType\": \"uint256\",\n                  \"name\": \"randomResult\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"indexed\": false,\n                  \"internalType\": \"uint256\",\n                  \"name\": \"time\",\n                  \"type\": \"uint256\"\n                }],\n                \"name\": \"Result\",\n                \"type\": \"event\"\n              }, {\n                \"anonymous\": false,\n                \"inputs\": [{\n                  \"indexed\": false,\n                  \"internalType\": \"address\",\n                  \"name\": \"admin\",\n                  \"type\": \"address\"\n                }, {\n                  \"indexed\": false,\n                  \"internalType\": \"uint256\",\n                  \"name\": \"amount\",\n                  \"type\": \"uint256\"\n                }],\n                \"name\": \"Withdraw\",\n                \"type\": \"event\"\n              }, {\n                \"inputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"bet\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"seed\",\n                  \"type\": \"uint256\"\n                }],\n                \"name\": \"game\",\n                \"outputs\": [{\n                  \"internalType\": \"bool\",\n                  \"name\": \"\",\n                  \"type\": \"bool\"\n                }],\n                \"stateMutability\": \"payable\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [{\n                  \"internalType\": \"bytes32\",\n                  \"name\": \"requestId\",\n                  \"type\": \"bytes32\"\n                }, {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"randomness\",\n                  \"type\": \"uint256\"\n                }],\n                \"name\": \"rawFulfillRandomness\",\n                \"outputs\": [],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [{\n                  \"internalType\": \"bytes32\",\n                  \"name\": \"_keyHash\",\n                  \"type\": \"bytes32\"\n                }, {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_fee\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_seed\",\n                  \"type\": \"uint256\"\n                }],\n                \"name\": \"requestRandomness\",\n                \"outputs\": [{\n                  \"internalType\": \"bytes32\",\n                  \"name\": \"requestId\",\n                  \"type\": \"bytes32\"\n                }],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"function\"\n              }, {\n                \"stateMutability\": \"payable\",\n                \"type\": \"receive\"\n              }, {\n                \"inputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"random\",\n                  \"type\": \"uint256\"\n                }],\n                \"name\": \"verdict\",\n                \"outputs\": [],\n                \"stateMutability\": \"payable\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"amount\",\n                  \"type\": \"uint256\"\n                }],\n                \"name\": \"withdrawEther\",\n                \"outputs\": [],\n                \"stateMutability\": \"payable\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"amount\",\n                  \"type\": \"uint256\"\n                }],\n                \"name\": \"withdrawLink\",\n                \"outputs\": [],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [],\n                \"stateMutability\": \"nonpayable\",\n                \"type\": \"constructor\"\n              }, {\n                \"inputs\": [],\n                \"name\": \"admin\",\n                \"outputs\": [{\n                  \"internalType\": \"address payable\",\n                  \"name\": \"\",\n                  \"type\": \"address\"\n                }],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [],\n                \"name\": \"ethInUsd\",\n                \"outputs\": [{\n                  \"internalType\": \"int256\",\n                  \"name\": \"\",\n                  \"type\": \"int256\"\n                }],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [],\n                \"name\": \"gameId\",\n                \"outputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"\",\n                  \"type\": \"uint256\"\n                }],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"\",\n                  \"type\": \"uint256\"\n                }],\n                \"name\": \"games\",\n                \"outputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"id\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"bet\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"seed\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"amount\",\n                  \"type\": \"uint256\"\n                }, {\n                  \"internalType\": \"address payable\",\n                  \"name\": \"player\",\n                  \"type\": \"address\"\n                }],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [],\n                \"name\": \"lastGameId\",\n                \"outputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"\",\n                  \"type\": \"uint256\"\n                }],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [{\n                  \"internalType\": \"bytes32\",\n                  \"name\": \"\",\n                  \"type\": \"bytes32\"\n                }],\n                \"name\": \"nonces\",\n                \"outputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"\",\n                  \"type\": \"uint256\"\n                }],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [],\n                \"name\": \"randomResult\",\n                \"outputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"\",\n                  \"type\": \"uint256\"\n                }],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n              }, {\n                \"inputs\": [],\n                \"name\": \"weiInUsd\",\n                \"outputs\": [{\n                  \"internalType\": \"uint256\",\n                  \"name\": \"\",\n                  \"type\": \"uint256\"\n                }],\n                \"stateMutability\": \"view\",\n                \"type\": \"function\"\n              }];\n              contract_address = '0xEa88aD9AA78a4b4f6deD5346Ab490B13268FeCE1'; //rinkeby\n\n              contract = new web3.eth.Contract(contract_abi, contract_address);\n              _context4.next = 9;\n              return web3.eth.getAccounts();\n\n            case 9:\n              accounts = _context4.sent;\n\n              if (!(typeof accounts[0] !== 'undefined' && accounts[0] !== null)) {\n                _context4.next = 21;\n                break;\n              }\n\n              _context4.next = 13;\n              return web3.eth.getBalance(accounts[0]);\n\n            case 13:\n              balance = _context4.sent;\n              _context4.next = 16;\n              return web3.eth.getBalance(contract_address);\n\n            case 16:\n              maxBet = _context4.sent;\n              _context4.next = 19;\n              return contract.methods.weiInUsd().call();\n\n            case 19:\n              minBet = _context4.sent;\n\n              _this2.setState({\n                account: accounts[0],\n                balance: balance,\n                minBet: minBet,\n                maxBet: maxBet\n              });\n\n            case 21:\n              _this2.setState({\n                contract: contract,\n                contractAddress: contract_address\n              }); //Update account&balance when user change the account\n\n\n              window.ethereum.on('accountsChanged', /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(accounts) {\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          if (!(typeof accounts[0] !== 'undefined' && accounts[0] !== null)) {\n                            _context2.next = 13;\n                            break;\n                          }\n\n                          _context2.next = 3;\n                          return web3.eth.getBalance(accounts[0]);\n\n                        case 3:\n                          balance = _context2.sent;\n                          _context2.next = 6;\n                          return web3.eth.getBalance(contract_address);\n\n                        case 6:\n                          maxBet = _context2.sent;\n                          _context2.next = 9;\n                          return contract.methods.weiInUsd().call();\n\n                        case 9:\n                          minBet = _context2.sent;\n\n                          _this2.setState({\n                            account: accounts[0],\n                            balance: balance,\n                            minBet: minBet,\n                            maxBet: maxBet\n                          });\n\n                          _context2.next = 14;\n                          break;\n\n                        case 13:\n                          _this2.setState({\n                            account: null,\n                            balance: 0\n                          });\n\n                        case 14:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function (_x) {\n                  return _ref.apply(this, arguments);\n                };\n              }()); //Update data when user switch the network\n\n              window.ethereum.on('chainChanged', /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(chainId) {\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          network = parseInt(chainId, 16);\n\n                          if (!(network !== 4)) {\n                            _context3.next = 5;\n                            break;\n                          }\n\n                          _this2.setState({\n                            wrongNetwork: true\n                          });\n\n                          _context3.next = 17;\n                          break;\n\n                        case 5:\n                          if (!_this2.state.account) {\n                            _context3.next = 16;\n                            break;\n                          }\n\n                          _context3.next = 8;\n                          return _this2.state.web3.eth.getBalance(_this2.state.account);\n\n                        case 8:\n                          balance = _context3.sent;\n                          _context3.next = 11;\n                          return _this2.state.web3.eth.getBalance(_this2.state.contractAddress);\n\n                        case 11:\n                          maxBet = _context3.sent;\n                          _context3.next = 14;\n                          return _this2.state.contract.methods.weiInUsd().call();\n\n                        case 14:\n                          minBet = _context3.sent;\n\n                          _this2.setState({\n                            balance: balance,\n                            maxBet: maxBet,\n                            minBet: minBet\n                          });\n\n                        case 16:\n                          _this2.setState({\n                            network: network,\n                            loading: false,\n                            onlyNetwork: false,\n                            wrongNetwork: false\n                          });\n\n                        case 17:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function (_x2) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n\n            case 24:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  }\n\n  makeBet(bet, amount) {\n    var _this3 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var networkId, randomSeed;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _this3.state.web3.eth.net.getId();\n\n            case 2:\n              networkId = _context6.sent;\n\n              if (networkId !== 4) {\n                _this3.setState({\n                  wrongNetwork: true\n                });\n              } else if (typeof _this3.state.account !== 'undefined' && _this3.state.account !== null) {\n                randomSeed = Math.floor(Math.random() * Math.floor(1e9)); //Send bet to the contract and wait for the verdict\n\n                _this3.state.contract.methods.game(bet, randomSeed).send({\n                  from: _this3.state.account,\n                  value: amount\n                }).on('transactionHash', hash => {\n                  _this3.setState({\n                    loading: true\n                  });\n\n                  _this3.state.contract.events.Result({}, /*#__PURE__*/function () {\n                    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(error, event) {\n                      var verdict, balance, maxBet;\n                      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                        while (1) {\n                          switch (_context5.prev = _context5.next) {\n                            case 0:\n                              verdict = event.returnValues.winAmount;\n\n                              if (verdict === '0') {\n                                window.alert('lose :(');\n                              } else {\n                                window.alert('WIN!');\n                              } //Prevent error when user logout, while waiting for the verdict\n\n\n                              if (!(_this3.state.account !== null && typeof _this3.state.account !== 'undefined')) {\n                                _context5.next = 10;\n                                break;\n                              }\n\n                              _context5.next = 5;\n                              return _this3.state.web3.eth.getBalance(_this3.state.account);\n\n                            case 5:\n                              balance = _context5.sent;\n                              _context5.next = 8;\n                              return _this3.state.web3.eth.getBalance(_this3.state.contractAddress);\n\n                            case 8:\n                              maxBet = _context5.sent;\n\n                              _this3.setState({\n                                balance: balance,\n                                maxBet: maxBet\n                              });\n\n                            case 10:\n                              _this3.setState({\n                                loading: false\n                              });\n\n                            case 11:\n                            case \"end\":\n                              return _context5.stop();\n                          }\n                        }\n                      }, _callee5);\n                    }));\n\n                    return function (_x3, _x4) {\n                      return _ref3.apply(this, arguments);\n                    };\n                  }());\n                }).on('error', error => {\n                  window.alert('Error');\n                });\n              } else {\n                window.alert('Problem with account or network');\n              }\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }))();\n  }\n\n  onChange(value) {\n    this.setState({\n      'amount': value\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: null,\n      amount: null,\n      balance: null,\n      contract: null,\n      event: null,\n      loading: false,\n      network: null,\n      maxBet: 0,\n      minBet: 0,\n      web3: null,\n      wrongNetwork: false,\n      contractAddress: null\n    };\n    this.makeBet = this.makeBet.bind(this);\n    this.setState = this.setState.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      account: this.state.account,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }), \"\\xA0\", this.state.wrongNetwork ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid mt-5 text-monospace text-center mr-auto ml-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content mr-auto ml-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, \"Please Enter Rinkeby Network\"))) : this.state.loading ? /*#__PURE__*/React.createElement(Loading, {\n      balance: this.state.balance,\n      maxBet: this.state.maxBet,\n      minBet: this.state.minBet,\n      web3: this.state.web3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(Main, {\n      amount: this.state.amount,\n      balance: this.state.balance,\n      makeBet: this.makeBet,\n      onChange: this.onChange,\n      maxBet: this.state.maxBet,\n      minBet: this.state.minBet,\n      loading: this.state.loading,\n      web3: this.state.web3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ClaimChain/Simple-VRF-Game/src/components/App.js"],"names":["React","Component","Loading","Navbar","Main","Web3","App","componentWillMount","loadWeb3","window","ethereum","state","wrongNetwork","autoRefreshOnNetworkChange","web3","setState","contract_abi","contract_address","contract","eth","Contract","getAccounts","accounts","getBalance","balance","maxBet","methods","weiInUsd","call","minBet","account","contractAddress","on","chainId","network","parseInt","loading","onlyNetwork","makeBet","bet","amount","net","getId","networkId","randomSeed","Math","floor","random","game","send","from","value","hash","events","Result","error","event","verdict","returnValues","winAmount","alert","onChange","constructor","props","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Loading from './Loading'\r\nimport Navbar from './Navbar'\r\nimport Main from './Main'\r\nimport Web3 from 'web3'\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n  \r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n  }\r\n\r\n  /** !UPDATE **/\r\n  async loadWeb3() {\r\n    if(typeof window.ethereum!=='undefined' && !this.state.wrongNetwork){\r\n      let accounts, network, balance, web3, maxBet, minBet, contract, contract_abi, contract_address\r\n\r\n      //don't refresh DApp when user change the network\r\n      window.ethereum.autoRefreshOnNetworkChange = false;\r\n\r\n      web3 = new Web3(window.ethereum)\r\n      this.setState({web3: web3})\r\n\r\n      contract_abi = [{\"anonymous\": false,\"inputs\": [{\"indexed\": true,\"internalType\": \"address\",\"name\": \"sender\",\"type\": \"address\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"}],\"name\": \"Received\",\"type\": \"event\"},{\"anonymous\": false,\"inputs\": [{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"id\",\"type\": \"uint256\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"bet\",\"type\": \"uint256\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"randomSeed\",\"type\": \"uint256\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"},{\"indexed\": false,\"internalType\": \"address\",\"name\": \"player\",\"type\": \"address\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"winAmount\",\"type\": \"uint256\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"randomResult\",\"type\": \"uint256\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"time\",\"type\": \"uint256\"}],\"name\": \"Result\",\"type\": \"event\"},{\"anonymous\": false,\"inputs\": [{\"indexed\": false,\"internalType\": \"address\",\"name\": \"admin\",\"type\": \"address\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"}],\"name\": \"Withdraw\",\"type\": \"event\"},{\"inputs\": [{\"internalType\": \"uint256\",\"name\": \"bet\",\"type\": \"uint256\"},{\"internalType\": \"uint256\",\"name\": \"seed\",\"type\": \"uint256\"}],\"name\": \"game\",\"outputs\": [{\"internalType\": \"bool\",\"name\": \"\",\"type\": \"bool\"}],\"stateMutability\": \"payable\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"bytes32\",\"name\": \"requestId\",\"type\": \"bytes32\"},{\"internalType\": \"uint256\",\"name\": \"randomness\",\"type\": \"uint256\"}],\"name\": \"rawFulfillRandomness\",\"outputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"bytes32\",\"name\": \"_keyHash\",\"type\": \"bytes32\"},{\"internalType\": \"uint256\",\"name\": \"_fee\",\"type\": \"uint256\"},{\"internalType\": \"uint256\",\"name\": \"_seed\",\"type\": \"uint256\"}],\"name\": \"requestRandomness\",\"outputs\": [{\"internalType\": \"bytes32\",\"name\": \"requestId\",\"type\": \"bytes32\"}],\"stateMutability\": \"nonpayable\",\"type\": \"function\"},{\"stateMutability\": \"payable\",\"type\": \"receive\"},{\"inputs\": [{\"internalType\": \"uint256\",\"name\": \"random\",\"type\": \"uint256\"}],\"name\": \"verdict\",\"outputs\": [],\"stateMutability\": \"payable\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"}],\"name\": \"withdrawEther\",\"outputs\": [],\"stateMutability\": \"payable\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"}],\"name\": \"withdrawLink\",\"outputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"function\"},{\"inputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"constructor\"},{\"inputs\": [],\"name\": \"admin\",\"outputs\": [{\"internalType\": \"address payable\",\"name\": \"\",\"type\": \"address\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"ethInUsd\",\"outputs\": [{\"internalType\": \"int256\",\"name\": \"\",\"type\": \"int256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"gameId\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"name\": \"games\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"id\",\"type\": \"uint256\"},{\"internalType\": \"uint256\",\"name\": \"bet\",\"type\": \"uint256\"},{\"internalType\": \"uint256\",\"name\": \"seed\",\"type\": \"uint256\"},{\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"},{\"internalType\": \"address payable\",\"name\": \"player\",\"type\": \"address\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"lastGameId\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"bytes32\",\"name\": \"\",\"type\": \"bytes32\"}],\"name\": \"nonces\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"randomResult\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"weiInUsd\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\",\"type\": \"function\"}]\r\n      contract_address = '0xEa88aD9AA78a4b4f6deD5346Ab490B13268FeCE1' //rinkeby\r\n      contract = new web3.eth.Contract(contract_abi, contract_address);\r\n      accounts = await web3.eth.getAccounts()\r\n      \r\n      //Update the data when user initially connect\r\n      if(typeof accounts[0]!=='undefined' && accounts[0]!==null) {\r\n        balance = await web3.eth.getBalance(accounts[0])\r\n        maxBet = await web3.eth.getBalance(contract_address)\r\n        minBet = await contract.methods.weiInUsd().call()\r\n        this.setState({account: accounts[0], balance: balance, minBet: minBet, maxBet: maxBet})\r\n      }\r\n\r\n      this.setState({\r\n        contract: contract,\r\n        contractAddress: contract_address\r\n      })\r\n\r\n      //Update account&balance when user change the account\r\n      window.ethereum.on('accountsChanged', async (accounts) => {\r\n        if(typeof accounts[0] !== 'undefined'  && accounts[0]!==null){\r\n          balance = await web3.eth.getBalance(accounts[0])\r\n          maxBet = await web3.eth.getBalance(contract_address)\r\n          minBet = await contract.methods.weiInUsd().call()\r\n          \r\n          this.setState({account: accounts[0], balance: balance, minBet: minBet, maxBet: maxBet})\r\n        } else {\r\n          this.setState({account: null, balance: 0})\r\n        }\r\n      });\r\n\r\n      //Update data when user switch the network\r\n      window.ethereum.on('chainChanged', async (chainId) => {\r\n        network = parseInt(chainId, 16)\r\n        if(network!==4){\r\n          this.setState({wrongNetwork: true})\r\n        } else {\r\n          if(this.state.account){\r\n            balance = await this.state.web3.eth.getBalance(this.state.account)\r\n            maxBet = await this.state.web3.eth.getBalance(this.state.contractAddress)\r\n            minBet = await this.state.contract.methods.weiInUsd().call()\r\n            \r\n            this.setState({ balance: balance, maxBet: maxBet, minBet: minBet })\r\n          }\r\n          this.setState({ network: network, loading: false, onlyNetwork: false, wrongNetwork: false})\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async makeBet(bet, amount) {\r\n    //randomSeed - one of the components from which will be generated final random value\r\n    const networkId = await this.state.web3.eth.net.getId() \r\n    if(networkId!==4) {\r\n      this.setState({wrongNetwork: true})\r\n    } else if(typeof this.state.account !=='undefined' && this.state.account !==null){\r\n      var randomSeed = Math.floor(Math.random() * Math.floor(1e9))\r\n\r\n      //Send bet to the contract and wait for the verdict\r\n      this.state.contract.methods.game(bet, randomSeed).send({from: this.state.account, value: amount}).on('transactionHash', (hash) => {\r\n        this.setState({ loading: true })\r\n        this.state.contract.events.Result({}, async (error, event) => {\r\n          const verdict = event.returnValues.winAmount\r\n          if(verdict === '0') {\r\n            window.alert('lose :(')\r\n          } else {\r\n            window.alert('WIN!')\r\n          }\r\n\r\n          //Prevent error when user logout, while waiting for the verdict\r\n          if(this.state.account!==null && typeof this.state.account!=='undefined'){\r\n            const balance = await this.state.web3.eth.getBalance(this.state.account)\r\n            const maxBet = await this.state.web3.eth.getBalance(this.state.contractAddress)\r\n            this.setState({ balance: balance, maxBet: maxBet })\r\n          }\r\n          this.setState({ loading: false })\r\n        })\r\n      }).on('error', (error) => {\r\n        window.alert('Error')\r\n      })\r\n    } else {\r\n      window.alert('Problem with account or network')\r\n    }\r\n  }\r\n\r\n  onChange(value) {\r\n    this.setState({'amount': value});\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: null,\r\n      amount: null,\r\n      balance: null,\r\n      contract: null,\r\n      event: null,\r\n      loading: false,\r\n      network: null,\r\n      maxBet: 0,\r\n      minBet: 0,\r\n      web3: null,\r\n      wrongNetwork: false,\r\n      contractAddress: null\r\n    }\r\n\r\n    this.makeBet = this.makeBet.bind(this)\r\n    this.setState = this.setState.bind(this)\r\n    this.onChange = this.onChange.bind(this)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar account={this.state.account}/>&nbsp;\r\n        {this.state.wrongNetwork\r\n          ? <div className=\"container-fluid mt-5 text-monospace text-center mr-auto ml-auto\">\r\n              <div className=\"content mr-auto ml-auto\">\r\n                <h1>Please Enter Rinkeby Network</h1>\r\n              </div>\r\n            </div>\r\n          : this.state.loading \r\n              ? <Loading\r\n                  balance={this.state.balance}\r\n                  maxBet={this.state.maxBet}\r\n                  minBet={this.state.minBet}\r\n                  web3={this.state.web3}\r\n                />\r\n              : <Main\r\n                  amount={this.state.amount}\r\n                  balance={this.state.balance}\r\n                  makeBet={this.makeBet}\r\n                  onChange={this.onChange}\r\n                  maxBet={this.state.maxBet}\r\n                  minBet={this.state.minBet}\r\n                  loading={this.state.loading}\r\n                  web3={this.state.web3}\r\n                />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}