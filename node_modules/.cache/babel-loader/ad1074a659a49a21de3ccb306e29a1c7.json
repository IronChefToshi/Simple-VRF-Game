{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _objectSpread = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar CID = require('cids');\n\nvar configure = require('../../lib/configure');\n\nvar toUrlSearchParams = require('../../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid, dLink, options = {}) {\n      var res, _yield$res$json, Hash;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return api.post('object/patch/add-link', {\n                timeout: options.timeout,\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: [\"\".concat(cid instanceof Uint8Array ? new CID(cid) : cid), dLink.Name || dLink.name || '', (dLink.Hash || dLink.cid || '').toString() || null]\n                }, options)),\n                headers: options.headers\n              });\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              _yield$res$json = _context.sent;\n              Hash = _yield$res$json.Hash;\n              return _context.abrupt(\"return\", new CID(Hash));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n});","map":{"version":3,"sources":["C:/Users/ClaimChain/node_modules/ipfs-http-client/src/object/patch/add-link.js"],"names":["CID","require","configure","toUrlSearchParams","module","exports","api","cid","dLink","options","post","timeout","signal","searchParams","arg","Uint8Array","Name","name","Hash","toString","headers","res","json"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAzB;;AACA,IAAME,iBAAiB,GAAGF,OAAO,CAAC,gCAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC;AAAA,wEAAO,iBAAOC,GAAP,EAAYC,KAAZ,EAAmBC,OAAO,GAAG,EAA7B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACaH,GAAG,CAACI,IAAJ,CAAS,uBAAT,EAAkC;AAClDC,gBAAAA,OAAO,EAAEF,OAAO,CAACE,OADiC;AAElDC,gBAAAA,MAAM,EAAEH,OAAO,CAACG,MAFkC;AAGlDC,gBAAAA,YAAY,EAAEV,iBAAiB;AAC7BW,kBAAAA,GAAG,EAAE,WACAP,GAAG,YAAYQ,UAAf,GAA4B,IAAIf,GAAJ,CAAQO,GAAR,CAA5B,GAA2CA,GAD3C,GAEHC,KAAK,CAACQ,IAAN,IAAcR,KAAK,CAACS,IAApB,IAA4B,EAFzB,EAGH,CAACT,KAAK,CAACU,IAAN,IAAcV,KAAK,CAACD,GAApB,IAA2B,EAA5B,EAAgCY,QAAhC,MAA8C,IAH3C;AADwB,mBAM1BV,OAN0B,EAHmB;AAWlDW,gBAAAA,OAAO,EAAEX,OAAO,CAACW;AAXiC,eAAlC,CADb;;AAAA;AACCC,cAAAA,GADD;AAAA;AAAA,qBAekBA,GAAG,CAACC,IAAJ,EAflB;;AAAA;AAAA;AAeGJ,cAAAA,IAfH,mBAeGA,IAfH;AAAA,+CAiBE,IAAIlB,GAAJ,CAAQkB,IAAR,CAjBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAmBD,CApByB,CAA1B","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst configure = require('../../lib/configure')\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async (cid, dLink, options = {}) => {\n    const res = await api.post('object/patch/add-link', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${cid instanceof Uint8Array ? new CID(cid) : cid}`,\n          dLink.Name || dLink.name || '',\n          (dLink.Hash || dLink.cid || '').toString() || null\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Hash } = await res.json()\n\n    return new CID(Hash)\n  }\n})\n"]},"metadata":{},"sourceType":"script"}