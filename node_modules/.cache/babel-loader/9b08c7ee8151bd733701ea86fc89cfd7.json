{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _objectSpread = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('..').ImplementsMethod<'get', import('ipfs-core/src/components/config')>}\n   */\n  var get = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(key, options = {}) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (key) {\n                _context.next = 2;\n                break;\n              }\n\n              throw new Error('key argument is required');\n\n            case 2:\n              _context.next = 4;\n              return api.post('config', {\n                timeout: options.timeout,\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: key\n                }, options)),\n                headers: options.headers\n              });\n\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return res.json();\n\n            case 7:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data.Value);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function get(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return get;\n});","map":{"version":3,"sources":["C:/Users/ClaimChain/node_modules/ipfs-http-client/src/config/get.js"],"names":["configure","require","toUrlSearchParams","module","exports","api","get","key","options","Error","post","timeout","signal","searchParams","arg","headers","res","json","data","Value"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;AAChC;AACF;AACA;AACE,MAAMC,GAAG;AAAA,wEAAG,iBAAOC,GAAP,EAAYC,OAAO,GAAG,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACLD,GADK;AAAA;AAAA;AAAA;;AAAA,oBAEF,IAAIE,KAAJ,CAAU,0BAAV,CAFE;;AAAA;AAAA;AAAA,qBAKQJ,GAAG,CAACK,IAAJ,CAAS,QAAT,EAAmB;AACnCC,gBAAAA,OAAO,EAAEH,OAAO,CAACG,OADkB;AAEnCC,gBAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFmB;AAGnCC,gBAAAA,YAAY,EAAEX,iBAAiB;AAC7BY,kBAAAA,GAAG,EAAEP;AADwB,mBAE1BC,OAF0B,EAHI;AAOnCO,gBAAAA,OAAO,EAAEP,OAAO,CAACO;AAPkB,eAAnB,CALR;;AAAA;AAKJC,cAAAA,GALI;AAAA;AAAA,qBAcSA,GAAG,CAACC,IAAJ,EAdT;;AAAA;AAcJC,cAAAA,IAdI;AAAA,+CAgBHA,IAAI,CAACC,KAhBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAHb,GAAG;AAAA;AAAA;AAAA,KAAT;;AAmBA,SAAOA,GAAP;AACD,CAxByB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('..').ImplementsMethod<'get', import('ipfs-core/src/components/config')>}\n   */\n  const get = async (key, options = {}) => {\n    if (!key) {\n      throw new Error('key argument is required')\n    }\n\n    const res = await api.post('config', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Value\n  }\n\n  return get\n})\n"]},"metadata":{},"sourceType":"script"}