{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _require = require('bignumber.js'),\n    BigNumber = _require.BigNumber;\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options = {}) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return api.post('repo/stat', {\n                timeout: options.timeout,\n                signal: options.signal,\n                searchParams: toUrlSearchParams(options),\n                headers: options.headers\n              });\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              data = _context.sent;\n              return _context.abrupt(\"return\", {\n                numObjects: new BigNumber(data.NumObjects),\n                repoSize: new BigNumber(data.RepoSize),\n                repoPath: data.RepoPath,\n                version: data.Version,\n                storageMax: new BigNumber(data.StorageMax)\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function () {\n      return _ref.apply(this, arguments);\n    };\n  }();\n});","map":{"version":3,"sources":["C:/Users/ClaimChain/node_modules/ipfs-http-client/src/repo/stat.js"],"names":["require","BigNumber","configure","toUrlSearchParams","module","exports","api","options","post","timeout","signal","searchParams","headers","res","json","data","numObjects","NumObjects","repoSize","RepoSize","repoPath","RepoPath","version","Version","storageMax","StorageMax"],"mappings":"AAAA;;;;;;eAEsBA,OAAO,CAAC,cAAD,C;IAArBC,S,YAAAA,S;;AACR,IAAMC,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMG,iBAAiB,GAAGH,OAAO,CAAC,6BAAD,CAAjC;;AAEAI,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC;AAAA,wEAAO,iBAAOC,OAAO,GAAG,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACaD,GAAG,CAACE,IAAJ,CAAS,WAAT,EAAsB;AACtCC,gBAAAA,OAAO,EAAEF,OAAO,CAACE,OADqB;AAEtCC,gBAAAA,MAAM,EAAEH,OAAO,CAACG,MAFsB;AAGtCC,gBAAAA,YAAY,EAAER,iBAAiB,CAACI,OAAD,CAHO;AAItCK,gBAAAA,OAAO,EAAEL,OAAO,CAACK;AAJqB,eAAtB,CADb;;AAAA;AACCC,cAAAA,GADD;AAAA;AAAA,qBAOcA,GAAG,CAACC,IAAJ,EAPd;;AAAA;AAOCC,cAAAA,IAPD;AAAA,+CASE;AACLC,gBAAAA,UAAU,EAAE,IAAIf,SAAJ,CAAcc,IAAI,CAACE,UAAnB,CADP;AAELC,gBAAAA,QAAQ,EAAE,IAAIjB,SAAJ,CAAcc,IAAI,CAACI,QAAnB,CAFL;AAGLC,gBAAAA,QAAQ,EAAEL,IAAI,CAACM,QAHV;AAILC,gBAAAA,OAAO,EAAEP,IAAI,CAACQ,OAJT;AAKLC,gBAAAA,UAAU,EAAE,IAAIvB,SAAJ,CAAcc,IAAI,CAACU,UAAnB;AALP,eATF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAiBD,CAlByB,CAA1B","sourcesContent":["'use strict'\n\nconst { BigNumber } = require('bignumber.js')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async (options = {}) => {\n    const res = await api.post('repo/stat', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      numObjects: new BigNumber(data.NumObjects),\n      repoSize: new BigNumber(data.RepoSize),\n      repoPath: data.RepoPath,\n      version: data.Version,\n      storageMax: new BigNumber(data.StorageMax)\n    }\n  }\n})\n"]},"metadata":{},"sourceType":"script"}