{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _objectSpread = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _wrapAsyncGenerator = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/wrapAsyncGenerator\");\n\nvar _awaitAsyncGenerator = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/awaitAsyncGenerator\");\n\nvar _asyncGeneratorDelegate = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncGeneratorDelegate\");\n\nvar _asyncIterator = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncIterator\");\n\nvar CID = require('cids');\n\nvar configure = require('./lib/configure');\n\nvar toUrlSearchParams = require('./lib/to-url-search-params');\n\nvar stat = require('./files/stat');\n\nmodule.exports = configure((api, opts) => {\n  return /*#__PURE__*/function () {\n    var _ls = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(path, options = {}) {\n      var pathStr, mapLink, _mapLink, res, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, result, links;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _mapLink = function _mapLink3() {\n                _mapLink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(link) {\n                  var hash, ipfsPath, stats, entry;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          hash = link.Hash;\n\n                          if (!hash.includes('/')) {\n                            _context.next = 7;\n                            break;\n                          }\n\n                          // the hash is a path, but we need the CID\n                          ipfsPath = hash.startsWith('/ipfs/') ? hash : \"/ipfs/\".concat(hash);\n                          _context.next = 5;\n                          return stat(opts)(ipfsPath);\n\n                        case 5:\n                          stats = _context.sent;\n                          hash = stats.cid;\n\n                        case 7:\n                          entry = {\n                            name: link.Name,\n                            path: pathStr + (link.Name ? \"/\".concat(link.Name) : ''),\n                            size: link.Size,\n                            cid: new CID(hash),\n                            type: typeOf(link),\n                            depth: link.Depth || 1\n                          };\n\n                          if (link.Mode) {\n                            entry.mode = parseInt(link.Mode, 8);\n                          }\n\n                          if (link.Mtime !== undefined && link.Mtime !== null) {\n                            entry.mtime = {\n                              secs: link.Mtime\n                            };\n\n                            if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\n                              entry.mtime.nsecs = link.MtimeNsecs;\n                            }\n                          }\n\n                          return _context.abrupt(\"return\", entry);\n\n                        case 11:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n                return _mapLink.apply(this, arguments);\n              };\n\n              mapLink = function _mapLink2(_x2) {\n                return _mapLink.apply(this, arguments);\n              };\n\n              pathStr = \"\".concat(path instanceof Uint8Array ? new CID(path) : path);\n              _context2.next = 5;\n              return _awaitAsyncGenerator(api.post('ls', {\n                timeout: options.timeout,\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: pathStr\n                }, options)),\n                headers: options.headers\n              }));\n\n            case 5:\n              res = _context2.sent;\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _context2.prev = 8;\n              _iterator = _asyncIterator(res.ndjson());\n\n            case 10:\n              _context2.next = 12;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 12:\n              _step = _context2.sent;\n              _iteratorNormalCompletion = _step.done;\n              _context2.next = 16;\n              return _awaitAsyncGenerator(_step.value);\n\n            case 16:\n              _value = _context2.sent;\n\n              if (_iteratorNormalCompletion) {\n                _context2.next = 36;\n                break;\n              }\n\n              result = _value;\n              result = result.Objects;\n\n              if (result) {\n                _context2.next = 22;\n                break;\n              }\n\n              throw new Error('expected .Objects in results');\n\n            case 22:\n              result = result[0];\n\n              if (result) {\n                _context2.next = 25;\n                break;\n              }\n\n              throw new Error('expected one array in results.Objects');\n\n            case 25:\n              links = result.Links;\n\n              if (Array.isArray(links)) {\n                _context2.next = 28;\n                break;\n              }\n\n              throw new Error('expected one array in results.Objects[0].Links');\n\n            case 28:\n              if (links.length) {\n                _context2.next = 32;\n                break;\n              }\n\n              _context2.next = 31;\n              return mapLink(result);\n\n            case 31:\n              return _context2.abrupt(\"return\");\n\n            case 32:\n              return _context2.delegateYield(_asyncGeneratorDelegate(_asyncIterator(links.map(mapLink)), _awaitAsyncGenerator), \"t0\", 33);\n\n            case 33:\n              _iteratorNormalCompletion = true;\n              _context2.next = 10;\n              break;\n\n            case 36:\n              _context2.next = 42;\n              break;\n\n            case 38:\n              _context2.prev = 38;\n              _context2.t1 = _context2[\"catch\"](8);\n              _didIteratorError = true;\n              _iteratorError = _context2.t1;\n\n            case 42:\n              _context2.prev = 42;\n              _context2.prev = 43;\n\n              if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                _context2.next = 47;\n                break;\n              }\n\n              _context2.next = 47;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 47:\n              _context2.prev = 47;\n\n              if (!_didIteratorError) {\n                _context2.next = 50;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 50:\n              return _context2.finish(47);\n\n            case 51:\n              return _context2.finish(42);\n\n            case 52:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[8, 38, 42, 52], [43,, 47, 51]]);\n    }));\n\n    function ls(_x) {\n      return _ls.apply(this, arguments);\n    }\n\n    return ls;\n  }();\n});\n\nfunction typeOf(link) {\n  switch (link.Type) {\n    case 1:\n    case 5:\n      return 'dir';\n\n    case 2:\n      return 'file';\n\n    default:\n      return 'unknown';\n  }\n}","map":{"version":3,"sources":["C:/Users/ClaimChain/node_modules/ipfs-http-client/src/ls.js"],"names":["CID","require","configure","toUrlSearchParams","stat","module","exports","api","opts","path","options","mapLink","link","hash","Hash","includes","ipfsPath","startsWith","stats","cid","entry","name","Name","pathStr","size","Size","type","typeOf","depth","Depth","Mode","mode","parseInt","Mtime","undefined","mtime","secs","MtimeNsecs","nsecs","Uint8Array","post","timeout","signal","searchParams","arg","headers","res","ndjson","result","Objects","Error","links","Links","Array","isArray","length","map","ls","Type"],"mappings":"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","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst configure = require('./lib/configure')\nconst toUrlSearchParams = require('./lib/to-url-search-params')\nconst stat = require('./files/stat')\n\nmodule.exports = configure((api, opts) => {\n  return async function * ls (path, options = {}) {\n    const pathStr = `${path instanceof Uint8Array ? new CID(path) : path}`\n\n    async function mapLink (link) {\n      let hash = link.Hash\n\n      if (hash.includes('/')) {\n        // the hash is a path, but we need the CID\n        const ipfsPath = hash.startsWith('/ipfs/') ? hash : `/ipfs/${hash}`\n        const stats = await stat(opts)(ipfsPath)\n\n        hash = stats.cid\n      }\n\n      const entry = {\n        name: link.Name,\n        path: pathStr + (link.Name ? `/${link.Name}` : ''),\n        size: link.Size,\n        cid: new CID(hash),\n        type: typeOf(link),\n        depth: link.Depth || 1\n      }\n\n      if (link.Mode) {\n        entry.mode = parseInt(link.Mode, 8)\n      }\n\n      if (link.Mtime !== undefined && link.Mtime !== null) {\n        entry.mtime = {\n          secs: link.Mtime\n        }\n\n        if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\n          entry.mtime.nsecs = link.MtimeNsecs\n        }\n      }\n\n      return entry\n    }\n\n    const res = await api.post('ls', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: pathStr,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (let result of res.ndjson()) {\n      result = result.Objects\n\n      if (!result) {\n        throw new Error('expected .Objects in results')\n      }\n\n      result = result[0]\n      if (!result) {\n        throw new Error('expected one array in results.Objects')\n      }\n\n      const links = result.Links\n      if (!Array.isArray(links)) {\n        throw new Error('expected one array in results.Objects[0].Links')\n      }\n\n      if (!links.length) {\n        // no links, this is a file, yield a single result\n        yield mapLink(result)\n\n        return\n      }\n\n      yield * links.map(mapLink)\n    }\n  }\n})\n\nfunction typeOf (link) {\n  switch (link.Type) {\n    case 1:\n    case 5:\n      return 'dir'\n    case 2:\n      return 'file'\n    default:\n      return 'unknown'\n  }\n}\n"]},"metadata":{},"sourceType":"script"}