{"ast":null,"code":"/* eslint-disable no-undef */\n'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _objectSpread = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _awaitAsyncGenerator = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncIterator\");\n\nvar _require = require('./http/fetch'),\n    fetch = _require.fetch,\n    Request = _require.Request,\n    Headers = _require.Headers;\n\nvar _require2 = require('./http/error'),\n    TimeoutError = _require2.TimeoutError,\n    HTTPError = _require2.HTTPError;\n\nvar merge = require('merge-options').bind({\n  ignoreUndefined: true\n});\n\nvar _require3 = require('iso-url'),\n    URL = _require3.URL,\n    URLSearchParams = _require3.URLSearchParams;\n\nvar TextDecoder = require('./text-decoder');\n\nvar AbortController = require('native-abort-controller');\n\nvar anySignal = require('any-signal');\n\nvar timeout = (promise, ms, abortController) => {\n  if (ms === undefined) {\n    return promise;\n  }\n\n  var start = Date.now();\n\n  var timedOut = () => {\n    var time = Date.now() - start;\n    return time >= ms;\n  };\n\n  return new Promise((resolve, reject) => {\n    var timeoutID = setTimeout(() => {\n      if (timedOut()) {\n        reject(new TimeoutError());\n        abortController.abort();\n      }\n    }, ms);\n\n    var after = next => {\n      return res => {\n        clearTimeout(timeoutID);\n\n        if (timedOut()) {\n          reject(new TimeoutError());\n          return;\n        }\n\n        next(res);\n      };\n    };\n\n    promise.then(after(resolve), after(reject));\n  });\n};\n\nvar defaults = {\n  headers: {},\n  throwHttpErrors: true,\n  credentials: 'same-origin',\n  transformSearchParams: p => p\n};\n/**\n * @typedef {Object} APIOptions - creates a new type named 'SpecialType'\n * @property {any} [body] - Request body\n * @property {Object} [json] - JSON shortcut\n * @property {string} [method] - GET, POST, PUT, DELETE, etc.\n * @property {string} [base] - The base URL to use in case url is a relative URL\n * @property {Headers|Record<string, string>} [headers] - Request header.\n * @property {number} [timeout] - Amount of time until request should timeout in ms.\n * @property {AbortSignal} [signal] - Signal to abort the request.\n * @property {URLSearchParams|Object} [searchParams] - URL search param.\n * @property {string} [credentials]\n * @property {boolean} [throwHttpErrors]\n * @property {function(URLSearchParams): URLSearchParams } [transformSearchParams]\n * @property {function(any): any} [transform] - When iterating the response body, transform each chunk with this function.\n * @property {function(Response): Promise<void>} [handleError] - Handle errors\n * @property {function({total:number, loaded:number, lengthComputable:boolean}):void} [onUploadProgress] - Can be passed to track upload progress.\n * Note that if this option in passed underlying request will be performed using `XMLHttpRequest` and response will not be streamed.\n */\n\nclass HTTP {\n  /**\n   *\n   * @param {APIOptions} options\n   */\n  constructor(options = {}) {\n    /** @type {APIOptions} */\n    this.opts = merge(defaults, options);\n  }\n  /**\n   * Fetch\n   *\n   * @param {string | URL | Request} resource\n   * @param {APIOptions} options\n   * @returns {Promise<Response>}\n   */\n\n\n  fetch(resource, options = {}) {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var opts, url, abortController, signal, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              /** @type {APIOptions} */\n              opts = merge(_this.opts, options);\n              opts.headers = new Headers(opts.headers); // validate resource type\n\n              if (!(typeof resource !== 'string' && !(resource instanceof URL || resource instanceof Request))) {\n                _context2.next = 4;\n                break;\n              }\n\n              throw new TypeError('`resource` must be a string, URL, or Request');\n\n            case 4:\n              if (!(opts.base && typeof opts.base === 'string' && typeof resource === 'string')) {\n                _context2.next = 9;\n                break;\n              }\n\n              if (!resource.startsWith('/')) {\n                _context2.next = 7;\n                break;\n              }\n\n              throw new Error('`resource` must not begin with a slash when using `base`');\n\n            case 7:\n              if (!opts.base.endsWith('/')) {\n                opts.base += '/';\n              }\n\n              resource = opts.base + resource;\n\n            case 9:\n              // TODO: try to remove the logic above or fix URL instance input without trailing '/'\n              url = new URL(resource, opts.base);\n\n              if (opts.searchParams) {\n                url.search = opts.transformSearchParams(new URLSearchParams(opts.searchParams));\n              }\n\n              if (opts.json !== undefined) {\n                opts.body = JSON.stringify(opts.json);\n                opts.headers.set('content-type', 'application/json');\n              }\n\n              abortController = new AbortController();\n              signal = anySignal([abortController.signal, opts.signal]);\n              _context2.next = 16;\n              return timeout(fetch(url.toString(), _objectSpread(_objectSpread({}, opts), {}, {\n                signal,\n                timeout: undefined\n              })), opts.timeout, abortController);\n\n            case 16:\n              response = _context2.sent;\n\n              if (!(!response.ok && opts.throwHttpErrors)) {\n                _context2.next = 22;\n                break;\n              }\n\n              if (!opts.handleError) {\n                _context2.next = 21;\n                break;\n              }\n\n              _context2.next = 21;\n              return opts.handleError(response);\n\n            case 21:\n              throw new HTTPError(response);\n\n            case 22:\n              response.iterator = function () {\n                var it = streamToAsyncIterator(response.body);\n\n                if (!isAsyncIterator(it)) {\n                  throw new Error('Can\\'t convert fetch body into a Async Iterator:');\n                }\n\n                return it;\n              };\n\n              response.ndjson = /*#__PURE__*/_wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, chunk;\n\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _iteratorNormalCompletion = true;\n                        _didIteratorError = false;\n                        _context.prev = 2;\n                        _iterator = _asyncIterator(ndjson(response.iterator()));\n\n                      case 4:\n                        _context.next = 6;\n                        return _awaitAsyncGenerator(_iterator.next());\n\n                      case 6:\n                        _step = _context.sent;\n                        _iteratorNormalCompletion = _step.done;\n                        _context.next = 10;\n                        return _awaitAsyncGenerator(_step.value);\n\n                      case 10:\n                        _value = _context.sent;\n\n                        if (_iteratorNormalCompletion) {\n                          _context.next = 23;\n                          break;\n                        }\n\n                        chunk = _value;\n\n                        if (!options.transform) {\n                          _context.next = 18;\n                          break;\n                        }\n\n                        _context.next = 16;\n                        return options.transform(chunk);\n\n                      case 16:\n                        _context.next = 20;\n                        break;\n\n                      case 18:\n                        _context.next = 20;\n                        return chunk;\n\n                      case 20:\n                        _iteratorNormalCompletion = true;\n                        _context.next = 4;\n                        break;\n\n                      case 23:\n                        _context.next = 29;\n                        break;\n\n                      case 25:\n                        _context.prev = 25;\n                        _context.t0 = _context[\"catch\"](2);\n                        _didIteratorError = true;\n                        _iteratorError = _context.t0;\n\n                      case 29:\n                        _context.prev = 29;\n                        _context.prev = 30;\n\n                        if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                          _context.next = 34;\n                          break;\n                        }\n\n                        _context.next = 34;\n                        return _awaitAsyncGenerator(_iterator.return());\n\n                      case 34:\n                        _context.prev = 34;\n\n                        if (!_didIteratorError) {\n                          _context.next = 37;\n                          break;\n                        }\n\n                        throw _iteratorError;\n\n                      case 37:\n                        return _context.finish(34);\n\n                      case 38:\n                        return _context.finish(29);\n\n                      case 39:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[2, 25, 29, 39], [30,, 34, 38]]);\n              }));\n              return _context2.abrupt(\"return\", response);\n\n            case 25:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n  /**\n   * @param {string | URL | Request} resource\n   * @param {APIOptions} options\n   * @returns {Promise<Response>}\n   */\n\n\n  post(resource, options = {}) {\n    return this.fetch(resource, _objectSpread(_objectSpread({}, options), {}, {\n      method: 'POST'\n    }));\n  }\n  /**\n   * @param {string | URL | Request} resource\n   * @param {APIOptions} options\n   * @returns {Promise<Response>}\n   */\n\n\n  get(resource, options = {}) {\n    return this.fetch(resource, _objectSpread(_objectSpread({}, options), {}, {\n      method: 'GET'\n    }));\n  }\n  /**\n   * @param {string | URL | Request} resource\n   * @param {APIOptions} options\n   * @returns {Promise<Response>}\n   */\n\n\n  put(resource, options = {}) {\n    return this.fetch(resource, _objectSpread(_objectSpread({}, options), {}, {\n      method: 'PUT'\n    }));\n  }\n  /**\n   * @param {string | URL | Request} resource\n   * @param {APIOptions} options\n   * @returns {Promise<Response>}\n   */\n\n\n  delete(resource, options = {}) {\n    return this.fetch(resource, _objectSpread(_objectSpread({}, options), {}, {\n      method: 'DELETE'\n    }));\n  }\n  /**\n   * @param {string | URL | Request} resource\n   * @param {APIOptions} options\n   * @returns {Promise<Response>}\n   */\n\n\n  options(resource, options = {}) {\n    return this.fetch(resource, _objectSpread(_objectSpread({}, options), {}, {\n      method: 'OPTIONS'\n    }));\n  }\n\n}\n/**\n * Parses NDJSON chunks from an iterator\n *\n * @param {AsyncGenerator<Uint8Array, void, any>} source\n * @returns {AsyncGenerator<Object, void, any>}\n */\n\n\nvar ndjson = /*#__PURE__*/function () {\n  var _ref2 = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(source) {\n    var decoder, buf, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _value2, chunk, lines, i, l;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            decoder = new TextDecoder();\n            buf = '';\n            _iteratorNormalCompletion2 = true;\n            _didIteratorError2 = false;\n            _context3.prev = 4;\n            _iterator2 = _asyncIterator(source);\n\n          case 6:\n            _context3.next = 8;\n            return _awaitAsyncGenerator(_iterator2.next());\n\n          case 8:\n            _step2 = _context3.sent;\n            _iteratorNormalCompletion2 = _step2.done;\n            _context3.next = 12;\n            return _awaitAsyncGenerator(_step2.value);\n\n          case 12:\n            _value2 = _context3.sent;\n\n            if (_iteratorNormalCompletion2) {\n              _context3.next = 30;\n              break;\n            }\n\n            chunk = _value2;\n            buf += decoder.decode(chunk, {\n              stream: true\n            });\n            lines = buf.split(/\\r?\\n/);\n            i = 0;\n\n          case 18:\n            if (!(i < lines.length - 1)) {\n              _context3.next = 26;\n              break;\n            }\n\n            l = lines[i].trim();\n\n            if (!(l.length > 0)) {\n              _context3.next = 23;\n              break;\n            }\n\n            _context3.next = 23;\n            return JSON.parse(l);\n\n          case 23:\n            i++;\n            _context3.next = 18;\n            break;\n\n          case 26:\n            buf = lines[lines.length - 1];\n\n          case 27:\n            _iteratorNormalCompletion2 = true;\n            _context3.next = 6;\n            break;\n\n          case 30:\n            _context3.next = 36;\n            break;\n\n          case 32:\n            _context3.prev = 32;\n            _context3.t0 = _context3[\"catch\"](4);\n            _didIteratorError2 = true;\n            _iteratorError2 = _context3.t0;\n\n          case 36:\n            _context3.prev = 36;\n            _context3.prev = 37;\n\n            if (!(!_iteratorNormalCompletion2 && _iterator2.return != null)) {\n              _context3.next = 41;\n              break;\n            }\n\n            _context3.next = 41;\n            return _awaitAsyncGenerator(_iterator2.return());\n\n          case 41:\n            _context3.prev = 41;\n\n            if (!_didIteratorError2) {\n              _context3.next = 44;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 44:\n            return _context3.finish(41);\n\n          case 45:\n            return _context3.finish(36);\n\n          case 46:\n            buf += decoder.decode();\n            buf = buf.trim();\n\n            if (!(buf.length !== 0)) {\n              _context3.next = 51;\n              break;\n            }\n\n            _context3.next = 51;\n            return JSON.parse(buf);\n\n          case 51:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[4, 32, 36, 46], [37,, 41, 45]]);\n  }));\n\n  return function ndjson(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar streamToAsyncIterator = function streamToAsyncIterator(source) {\n  if (isAsyncIterator(source)) {\n    // Workaround for https://github.com/node-fetch/node-fetch/issues/766\n    if (Object.prototype.hasOwnProperty.call(source, 'readable') && Object.prototype.hasOwnProperty.call(source, 'writable')) {\n      var iter = source[Symbol.asyncIterator]();\n      var wrapper = {\n        next: iter.next.bind(iter),\n        return: () => {\n          source.destroy();\n          return iter.return();\n        },\n        [Symbol.asyncIterator]: () => {\n          return wrapper;\n        }\n      };\n      return wrapper;\n    }\n\n    return source;\n  }\n\n  var reader = source.getReader();\n  return {\n    next() {\n      return reader.read();\n    },\n\n    return() {\n      reader.releaseLock();\n      return {};\n    },\n\n    [Symbol.asyncIterator]() {\n      return this;\n    }\n\n  };\n};\n\nvar isAsyncIterator = obj => {\n  return typeof obj === 'object' && obj !== null && // typeof obj.next === 'function' &&\n  typeof obj[Symbol.asyncIterator] === 'function';\n};\n\nHTTP.HTTPError = HTTPError;\nHTTP.TimeoutError = TimeoutError;\nHTTP.streamToAsyncIterator = streamToAsyncIterator;\n/**\n * @param {string | URL | Request} resource\n * @param {APIOptions} options\n * @returns {Promise<Response>}\n */\n\nHTTP.post = (resource, options) => new HTTP(options).post(resource, options);\n/**\n * @param {string | URL | Request} resource\n * @param {APIOptions} options\n * @returns {Promise<Response>}\n */\n\n\nHTTP.get = (resource, options) => new HTTP(options).get(resource, options);\n/**\n * @param {string | URL | Request} resource\n * @param {APIOptions} options\n * @returns {Promise<Response>}\n */\n\n\nHTTP.put = (resource, options) => new HTTP(options).put(resource, options);\n/**\n * @param {string | URL | Request} resource\n * @param {APIOptions} options\n * @returns {Promise<Response>}\n */\n\n\nHTTP.delete = (resource, options) => new HTTP(options).delete(resource, options);\n/**\n * @param {string | URL | Request} resource\n * @param {APIOptions} options\n * @returns {Promise<Response>}\n */\n\n\nHTTP.options = (resource, options) => new HTTP(options).options(resource, options);\n\nmodule.exports = HTTP;","map":{"version":3,"sources":["C:/Users/ClaimChain/node_modules/ipfs-utils/src/http.js"],"names":["require","fetch","Request","Headers","TimeoutError","HTTPError","merge","bind","ignoreUndefined","URL","URLSearchParams","TextDecoder","AbortController","anySignal","timeout","promise","ms","abortController","undefined","start","Date","now","timedOut","time","Promise","resolve","reject","timeoutID","setTimeout","abort","after","next","res","clearTimeout","then","defaults","headers","throwHttpErrors","credentials","transformSearchParams","p","HTTP","constructor","options","opts","resource","TypeError","base","startsWith","Error","endsWith","url","searchParams","search","json","body","JSON","stringify","set","signal","toString","response","ok","handleError","iterator","it","streamToAsyncIterator","isAsyncIterator","ndjson","chunk","transform","post","method","get","put","delete","source","decoder","buf","decode","stream","lines","split","i","length","l","trim","parse","Object","prototype","hasOwnProperty","call","iter","Symbol","asyncIterator","wrapper","return","destroy","reader","getReader","read","releaseLock","obj","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\n'use strict'\n\nconst { fetch, Request, Headers } = require('./http/fetch')\nconst { TimeoutError, HTTPError } = require('./http/error')\nconst merge = require('merge-options').bind({ ignoreUndefined: true })\nconst { URL, URLSearchParams } = require('iso-url')\nconst TextDecoder = require('./text-decoder')\nconst AbortController = require('native-abort-controller')\nconst anySignal = require('any-signal')\n\nconst timeout = (promise, ms, abortController) => {\n  if (ms === undefined) {\n    return promise\n  }\n\n  const start = Date.now()\n\n  const timedOut = () => {\n    const time = Date.now() - start\n\n    return time >= ms\n  }\n\n  return new Promise((resolve, reject) => {\n    const timeoutID = setTimeout(() => {\n      if (timedOut()) {\n        reject(new TimeoutError())\n        abortController.abort()\n      }\n    }, ms)\n\n    const after = (next) => {\n      return (res) => {\n        clearTimeout(timeoutID)\n\n        if (timedOut()) {\n          reject(new TimeoutError())\n          return\n        }\n\n        next(res)\n      }\n    }\n\n    promise\n      .then(after(resolve), after(reject))\n  })\n}\n\nconst defaults = {\n  headers: {},\n  throwHttpErrors: true,\n  credentials: 'same-origin',\n  transformSearchParams: p => p\n}\n\n/**\n * @typedef {Object} APIOptions - creates a new type named 'SpecialType'\n * @property {any} [body] - Request body\n * @property {Object} [json] - JSON shortcut\n * @property {string} [method] - GET, POST, PUT, DELETE, etc.\n * @property {string} [base] - The base URL to use in case url is a relative URL\n * @property {Headers|Record<string, string>} [headers] - Request header.\n * @property {number} [timeout] - Amount of time until request should timeout in ms.\n * @property {AbortSignal} [signal] - Signal to abort the request.\n * @property {URLSearchParams|Object} [searchParams] - URL search param.\n * @property {string} [credentials]\n * @property {boolean} [throwHttpErrors]\n * @property {function(URLSearchParams): URLSearchParams } [transformSearchParams]\n * @property {function(any): any} [transform] - When iterating the response body, transform each chunk with this function.\n * @property {function(Response): Promise<void>} [handleError] - Handle errors\n * @property {function({total:number, loaded:number, lengthComputable:boolean}):void} [onUploadProgress] - Can be passed to track upload progress.\n * Note that if this option in passed underlying request will be performed using `XMLHttpRequest` and response will not be streamed.\n */\n\nclass HTTP {\n  /**\n   *\n   * @param {APIOptions} options\n   */\n  constructor (options = {}) {\n    /** @type {APIOptions} */\n    this.opts = merge(defaults, options)\n  }\n\n  /**\n   * Fetch\n   *\n   * @param {string | URL | Request} resource\n   * @param {APIOptions} options\n   * @returns {Promise<Response>}\n   */\n  async fetch (resource, options = {}) {\n    /** @type {APIOptions} */\n    const opts = merge(this.opts, options)\n    opts.headers = new Headers(opts.headers)\n\n    // validate resource type\n    if (typeof resource !== 'string' && !(resource instanceof URL || resource instanceof Request)) {\n      throw new TypeError('`resource` must be a string, URL, or Request')\n    }\n\n    // validate resource format and normalize with prefixUrl\n    if (opts.base && typeof opts.base === 'string' && typeof resource === 'string') {\n      if (resource.startsWith('/')) {\n        throw new Error('`resource` must not begin with a slash when using `base`')\n      }\n\n      if (!opts.base.endsWith('/')) {\n        opts.base += '/'\n      }\n\n      resource = opts.base + resource\n    }\n\n    // TODO: try to remove the logic above or fix URL instance input without trailing '/'\n    const url = new URL(resource, opts.base)\n\n    if (opts.searchParams) {\n      url.search = opts.transformSearchParams(new URLSearchParams(opts.searchParams))\n    }\n\n    if (opts.json !== undefined) {\n      opts.body = JSON.stringify(opts.json)\n      opts.headers.set('content-type', 'application/json')\n    }\n\n    const abortController = new AbortController()\n    const signal = anySignal([abortController.signal, opts.signal])\n\n    const response = await timeout(fetch(url.toString(), {\n      ...opts,\n      signal,\n      timeout: undefined\n    }), opts.timeout, abortController)\n\n    if (!response.ok && opts.throwHttpErrors) {\n      if (opts.handleError) {\n        await opts.handleError(response)\n      }\n      throw new HTTPError(response)\n    }\n\n    response.iterator = function () {\n      const it = streamToAsyncIterator(response.body)\n\n      if (!isAsyncIterator(it)) {\n        throw new Error('Can\\'t convert fetch body into a Async Iterator:')\n      }\n\n      return it\n    }\n\n    response.ndjson = async function * () {\n      for await (const chunk of ndjson(response.iterator())) {\n        if (options.transform) {\n          yield options.transform(chunk)\n        } else {\n          yield chunk\n        }\n      }\n    }\n\n    return response\n  }\n\n  /**\n   * @param {string | URL | Request} resource\n   * @param {APIOptions} options\n   * @returns {Promise<Response>}\n   */\n  post (resource, options = {}) {\n    return this.fetch(resource, {\n      ...options,\n      method: 'POST'\n    })\n  }\n\n  /**\n   * @param {string | URL | Request} resource\n   * @param {APIOptions} options\n   * @returns {Promise<Response>}\n   */\n  get (resource, options = {}) {\n    return this.fetch(resource, {\n      ...options,\n      method: 'GET'\n    })\n  }\n\n  /**\n   * @param {string | URL | Request} resource\n   * @param {APIOptions} options\n   * @returns {Promise<Response>}\n   */\n  put (resource, options = {}) {\n    return this.fetch(resource, {\n      ...options,\n      method: 'PUT'\n    })\n  }\n\n  /**\n   * @param {string | URL | Request} resource\n   * @param {APIOptions} options\n   * @returns {Promise<Response>}\n   */\n  delete (resource, options = {}) {\n    return this.fetch(resource, {\n      ...options,\n      method: 'DELETE'\n    })\n  }\n\n  /**\n   * @param {string | URL | Request} resource\n   * @param {APIOptions} options\n   * @returns {Promise<Response>}\n   */\n  options (resource, options = {}) {\n    return this.fetch(resource, {\n      ...options,\n      method: 'OPTIONS'\n    })\n  }\n}\n\n/**\n * Parses NDJSON chunks from an iterator\n *\n * @param {AsyncGenerator<Uint8Array, void, any>} source\n * @returns {AsyncGenerator<Object, void, any>}\n */\nconst ndjson = async function * (source) {\n  const decoder = new TextDecoder()\n  let buf = ''\n\n  for await (const chunk of source) {\n    buf += decoder.decode(chunk, { stream: true })\n    const lines = buf.split(/\\r?\\n/)\n\n    for (let i = 0; i < lines.length - 1; i++) {\n      const l = lines[i].trim()\n      if (l.length > 0) {\n        yield JSON.parse(l)\n      }\n    }\n    buf = lines[lines.length - 1]\n  }\n  buf += decoder.decode()\n  buf = buf.trim()\n  if (buf.length !== 0) {\n    yield JSON.parse(buf)\n  }\n}\n\nconst streamToAsyncIterator = function (source) {\n  if (isAsyncIterator(source)) {\n    // Workaround for https://github.com/node-fetch/node-fetch/issues/766\n    if (Object.prototype.hasOwnProperty.call(source, 'readable') && Object.prototype.hasOwnProperty.call(source, 'writable')) {\n      const iter = source[Symbol.asyncIterator]()\n\n      const wrapper = {\n        next: iter.next.bind(iter),\n        return: () => {\n          source.destroy()\n\n          return iter.return()\n        },\n        [Symbol.asyncIterator]: () => {\n          return wrapper\n        }\n      }\n\n      return wrapper\n    }\n\n    return source\n  }\n\n  const reader = source.getReader()\n\n  return {\n    next () {\n      return reader.read()\n    },\n    return () {\n      reader.releaseLock()\n      return {}\n    },\n    [Symbol.asyncIterator] () {\n      return this\n    }\n  }\n}\n\nconst isAsyncIterator = (obj) => {\n  return typeof obj === 'object' &&\n  obj !== null &&\n  // typeof obj.next === 'function' &&\n  typeof obj[Symbol.asyncIterator] === 'function'\n}\n\nHTTP.HTTPError = HTTPError\nHTTP.TimeoutError = TimeoutError\nHTTP.streamToAsyncIterator = streamToAsyncIterator\n\n/**\n * @param {string | URL | Request} resource\n * @param {APIOptions} options\n * @returns {Promise<Response>}\n */\nHTTP.post = (resource, options) => new HTTP(options).post(resource, options)\n\n/**\n * @param {string | URL | Request} resource\n * @param {APIOptions} options\n * @returns {Promise<Response>}\n */\nHTTP.get = (resource, options) => new HTTP(options).get(resource, options)\n\n/**\n * @param {string | URL | Request} resource\n * @param {APIOptions} options\n * @returns {Promise<Response>}\n */\nHTTP.put = (resource, options) => new HTTP(options).put(resource, options)\n\n/**\n * @param {string | URL | Request} resource\n * @param {APIOptions} options\n * @returns {Promise<Response>}\n */\nHTTP.delete = (resource, options) => new HTTP(options).delete(resource, options)\n\n/**\n * @param {string | URL | Request} resource\n * @param {APIOptions} options\n * @returns {Promise<Response>}\n */\nHTTP.options = (resource, options) => new HTTP(options).options(resource, options)\n\nmodule.exports = HTTP\n"]},"metadata":{},"sourceType":"script"}