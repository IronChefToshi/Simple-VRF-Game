{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _objectSpread = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\ClaimChain\\\\chainlink_betting_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar configure = require('../lib/configure');\n\nvar _require = require('./utils'),\n    findSources = _require.findSources;\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/files/rm')>}\n   */\n  function rm() {\n    return _rm.apply(this, arguments);\n  }\n\n  function _rm() {\n    _rm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(...args) {\n      var _findSources, sources, options, res;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _findSources = findSources(args), sources = _findSources.sources, options = _findSources.options;\n              _context.next = 3;\n              return api.post('files/rm', {\n                timeout: options.timeout,\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: sources\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.text();\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _rm.apply(this, arguments);\n  }\n\n  return rm;\n});","map":{"version":3,"sources":["C:/Users/ClaimChain/node_modules/ipfs-http-client/src/files/rm.js"],"names":["configure","require","findSources","toUrlSearchParams","module","exports","api","rm","args","sources","options","post","timeout","signal","searchParams","arg","headers","res","text"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;eACwBA,OAAO,CAAC,SAAD,C;IAAvBC,W,YAAAA,W;;AACR,IAAMC,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBL,SAAS,CAACM,GAAG,IAAI;AAChC;AACF;AACA;AAHkC,WAIjBC,EAJiB;AAAA;AAAA;;AAAA;AAAA,mEAIhC,iBAAmB,GAAGC,IAAtB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BAC+BN,WAAW,CAACM,IAAD,CAD1C,EACUC,OADV,gBACUA,OADV,EACmBC,OADnB,gBACmBA,OADnB;AAAA;AAAA,qBAGoBJ,GAAG,CAACK,IAAJ,CAAS,UAAT,EAAqB;AACrCC,gBAAAA,OAAO,EAAEF,OAAO,CAACE,OADoB;AAErCC,gBAAAA,MAAM,EAAEH,OAAO,CAACG,MAFqB;AAGrCC,gBAAAA,YAAY,EAAEX,iBAAiB;AAC7BY,kBAAAA,GAAG,EAAEN;AADwB,mBAE1BC,OAF0B,EAHM;AAOrCM,gBAAAA,OAAO,EAAEN,OAAO,CAACM;AAPoB,eAArB,CAHpB;;AAAA;AAGQC,cAAAA,GAHR;AAAA;AAAA,qBAaQA,GAAG,CAACC,IAAJ,EAbR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJgC;AAAA;AAAA;;AAoBhC,SAAOX,EAAP;AACD,CArByB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst { findSources } = require('./utils')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/files/rm')>}\n   */\n  async function rm (...args) {\n    const { sources, options } = findSources(args)\n\n    const res = await api.post('files/rm', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sources,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n\n  return rm\n})\n"]},"metadata":{},"sourceType":"script"}